[{"/Users/suryapalinda/Desktop/refrenTaskFrontend/src/App.js":"1","/Users/suryapalinda/Desktop/refrenTaskFrontend/src/api/apiClient.js":"2","/Users/suryapalinda/Desktop/refrenTaskFrontend/src/reportWebVitals.js":"3","/Users/suryapalinda/Desktop/refrenTaskFrontend/src/components/userCard.js":"4","/Users/suryapalinda/Desktop/refrenTaskFrontend/src/components/resultCard.js":"5","/Users/suryapalinda/Desktop/refrenTaskFrontend/src/index.js":"6"},{"size":4717,"mtime":1608813031036,"results":"7","hashOfConfig":"8"},{"size":99,"mtime":1608489954784,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1608479196158,"results":"10","hashOfConfig":"8"},{"size":1917,"mtime":1608809422996,"results":"11","hashOfConfig":"8"},{"size":2077,"mtime":1608809364879,"results":"12","hashOfConfig":"8"},{"size":500,"mtime":1608479196157,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"owgjyu",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/suryapalinda/Desktop/refrenTaskFrontend/src/App.js",["27","28"],"/Users/suryapalinda/Desktop/refrenTaskFrontend/src/api/apiClient.js",[],"/Users/suryapalinda/Desktop/refrenTaskFrontend/src/reportWebVitals.js",[],"/Users/suryapalinda/Desktop/refrenTaskFrontend/src/components/userCard.js",["29"],"import React, { useState } from 'react';\nimport './common.css';\n\nconst UserCard = (props) => {\n  const { val, index, className, onHover, searchText, onSelect } = props;\n\n  const searchMatchText = (txt) => {\n    const match =\n      txt.substring(0, searchText.length).toLowerCase() ===\n      searchText.toLowerCase();\n\n    if (match) {\n      return (\n        <span>\n          <span style={{ color: '#327de5' }}>\n            {txt.substring(0, searchText.length)}\n          </span>\n          {txt.substring(searchText.length)}\n        </span>\n      );\n    } else {\n      return txt;\n    }\n  };\n  return (\n    <li\n      className={`listItem-card ${className}`}\n      onMouseOver={() => onHover(index)}\n      onClick={() => onSelect()}\n      style={{\n        borderBottomWidth: 0.1,\n        borderBottomColor: '#f0f0f0',\n        borderBottomStyle: 'double',\n      }}\n    >\n      <div style={{ color: '#4e4e4e', fontWeight: '700' }}>\n        {searchMatchText(val.ID)}\n      </div>\n      <div\n        style={{\n          color: '#5e6267',\n          fontWeight: '500',\n          fontStyle: 'italic',\n          paddingTop: 2,\n        }}\n      >\n        {searchMatchText(val.name)}\n      </div>\n      <div className=\"cardContent\" style={{ color: '#5e6267', paddingTop: 4 }}>\n        {searchMatchText(val.address)}\n      </div>\n      <div className=\"cardContent\" style={{ color: '#5e6267', paddingTop: 4 }}>\n        Pincode: {searchMatchText(val.pincode)}\n      </div>\n\n      <div\n        className=\"itemsList\"\n        style={{ color: '#5e6267', fontWeight: '400' }}\n      >\n        Items\n        {val.items.map((element, ind) => {\n          return (\n            <span\n              style={{ marginLeft: 8, fontWeight: '300', letterSpacing: 0.4 }}\n              key={ind}\n            >\n              {searchMatchText(element)}\n            </span>\n          );\n        })}\n      </div>\n    </li>\n  );\n};\n\nexport default UserCard;\n","/Users/suryapalinda/Desktop/refrenTaskFrontend/src/components/resultCard.js",["30","31"],"/Users/suryapalinda/Desktop/refrenTaskFrontend/src/index.js",[],{"ruleId":"32","severity":1,"message":"33","line":28,"column":5,"nodeType":"34","endLine":28,"endColumn":13,"suggestions":"35"},{"ruleId":"36","severity":1,"message":"37","line":81,"column":11,"nodeType":"38","endLine":81,"endColumn":65},{"ruleId":"39","severity":1,"message":"40","line":1,"column":17,"nodeType":"41","messageId":"42","endLine":1,"endColumn":25},{"ruleId":"39","severity":1,"message":"40","line":1,"column":17,"nodeType":"41","messageId":"42","endLine":1,"endColumn":25},{"ruleId":"43","severity":1,"message":"44","line":30,"column":9,"nodeType":"38","endLine":30,"endColumn":51},"react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'SearchApiCall' and 'searchData.length'. Either include them or remove the dependency array.","ArrayExpression",["45"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"desc":"46","fix":"47"},"Update the dependencies array to be: [SearchApiCall, search, searchData.length]",{"range":"48","text":"49"},[875,883],"[SearchApiCall, search, searchData.length]"]